
<script type="text/javascript">

document.addEventListener("DOMContentLoaded", function(event) { 
  Highcharts.setOptions({
    global: {
      timezoneOffset: <%=Time.zone.utc_offset/ -60 %>
    }
  });
   $.getJSON('<%=url_for(action: 'temperature_readings', controller: 'home')%>', function (jsonData) {

    var yowData = new Array();
    $.each( jsonData.yowReadings, function( key, val ) {
      var temp = (null == val) ? null : parseInt(val);
      yowData.push([Date.parse(key), temp]);

    });

    var windSpeedData = new Array();
    $.each( jsonData.windSpeed, function( key, val ) {
      var speed = (null == val) ? null : parseInt(val);
      windSpeedData.push([Date.parse(key), speed]);
    });

    var hourlyForecast = new Array();
    $.each( jsonData.hourlyForecast, function( key, val ) {
      var temp = (null == val) ? null : parseInt(val);
      hourlyForecast.push([Date.parse(key), temp]);
    });

    var windSpeedForecast = new Array();
    $.each( jsonData.windSpeedForecast, function( key, val ) {
      var speed = (null == val) ? null : parseInt(val);
      windSpeedForecast.push([Date.parse(key), speed]);
    });

    var pressureReadings = new Array();
    $.each( jsonData.pressureReadings, function( key, val ) {
      var pressure = (null == val) ? null : parseFloat(val);
      pressureReadings.push([Date.parse(key), pressure]);
    });

    var defaultFontSize = '20px';

    var defaults = {
        title: {
          text: null
        },
        credits:{
          enabled:false
        },
        chart: {
            type: "line",
            animation: false
        },
        plotOptions: {
            line: {
                animation: false,
                lineWidth: 2
            }
        },
         xAxis: {
          minorTickWidth: 1,
          minorTickInterval: 1000*60*60,
          minorGridLineWidth: 1,
          minorTickLength:0,
          tickColor: '#DDD',
          gridLineWidth: 2,
          tickWidth: 2,
          tickInterval: 1000*60*60*4,
          type: 'datetime',
          labels: {
            step:0,
            formatter: function() {
                
                var hours = (new Date(this.value)).getHours();
                var dateFormat = '';
                switch(hours){
                  case 0:
                    dateFormat = '0%p';
                    break;
                  case 12:
                    dateFormat = '%lN <br /> %a';
                    break;
                  default:
                    dateFormat = '%l%p';
                }

                return Highcharts.dateFormat(dateFormat, this.value);
            },
            style: {
              fontSize: defaultFontSize
            }
          },
           plotLines: [{
                color: '#bbb',
                dashStyle: 'dash',
                width: 1,
                value: new Date()
            }] 
        },
       
        tooltip: {
            enabled: false
        },
        legend: {
            layout: 'horizontal',
            align: 'right',
            verticalAlign: 'bottom',
            borderWidth: 0,
            itemStyle: {
              fontSize: defaultFontSize
            },
            symbolWidth:20
        }

    }


    $('#container-temp').highcharts($.extend({}, defaults, {
        yAxis: [{ 
            tickInterval: 2,
            tickWidth: 2,
            gridLineWidth: 2,
            tickColor: '#DDD',
            minorTickWidth: 1,
            minorTickInterval: 1,
            minorGridLineWidth: 1,
            minorTickLength:0,

            title: {
                text: 'Â°C',
                style:{
                  fontSize: defaultFontSize,
                  textTransform: 'none'
                }
            },
            allowDecimals: false,
            labels:{
              style: {
                fontSize: defaultFontSize
              }}

          }, { 
           
            linkedTo: 0,
            opposite: true,
            title: {
                text: null
            },
            labels:{
            
              style: {
                fontSize: defaultFontSize
              }}
        }],
        series: [{
            name: 'Observed',
            color:'#C00',
            data: yowData,
            marker: {
              enabled: false
            }, 
            states: {
              hover: {
                  enabled: false
              }
            }},
            {
            name: 'Forecast',
            dashStyle: 'ShortDash',
            color:'#C00',
            data: hourlyForecast,
            marker: {
              enabled: false
            }, 
            states: {
              hover: {
                  enabled: false
              }
            }
        }]

    }));


    $('#container-wind').highcharts($.extend({}, defaults, {

      
        yAxis: [{ 
          gridLineWidth: 2,
          minorGridLineWidth: 1,

          title: {
              text: 'km/h',
              style:{
                fontSize: defaultFontSize,
                textTransform: 'none'
              }
          },
          allowDecimals: false,
          labels:{
            style: {
              fontSize: defaultFontSize
            }}
        },{ 
            linkedTo: 0,
            opposite: true,
            title: {
                text: null
            }
            ,
          labels:{
            style: {
              fontSize: defaultFontSize
            }}
        }],
        series: [{
            name: 'Observed',
            color:'#00C',
            data: windSpeedData,
            yAxis: 0,
            marker: {
              enabled: false
            }, 
            states: {
              hover: {
                enabled: false
              }
            }},
            {
            name: 'Forecast',
            dashStyle: 'ShortDash',
            color:'#00C',
            data: windSpeedForecast,
            yAxis: 0,
            marker: {
              enabled: false
            }, 
            states: {
              hover: {
                  enabled: false
              }
            }
        }]

    }));

    $('#container-pressure').highcharts($.extend({}, defaults, {
        yAxis: [{ 
            gridLineWidth: 2,
            minorGridLineWidth: 1,
            title: {
                text: 'kPa',
                style:{
                  fontSize: defaultFontSize,
                  textTransform: 'none'
                }
            },
            allowDecimals: true,
            labels:{
              style: {
                fontSize: defaultFontSize
              }}

          }, { 
            minorGridLineWidth: 0,
            gridLineWidth:0,
           
            linkedTo: 0,
            opposite: true,
            title: {
                text: null
            },
            labels:{
            
              style: {
                fontSize: defaultFontSize
              }}
        }],
        series: [{
            name: 'Observed',
            color:'#0C0',
            data: pressureReadings,
            marker: {
              enabled: false
            }, 
            states: {
              hover: {
                  enabled: false
              }
            }}]

    }));

  });


});

</script>
<section class="chart">
  <div class="container">
    <div class="row">
      <div class="col-xs-12 portfolio-item text-center well well-lg">
        <h3>Temperature</h3>
        <div id="container-temp" class="chart-container">
          <div class="loader">Loading...</div>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="chart">
  <div class="container">
    <div class="row">
      <div class="col-xs-12 portfolio-item text-center well well-lg">
        <h3>Wind Speed</h3>
        <div id="container-wind" class="chart-container">
          <div class="loader">Loading...</div>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="chart">
  <div class="container">
    <div class="row">
      <div class="col-xs-12 portfolio-item text-center well well-lg">
        <h3>Barometric Pressure</h3>
        <div id="container-pressure" class="chart-container">
          <div class="loader">Loading...</div>
        </div>
      </div>
    </div>
  </div>
</section>
