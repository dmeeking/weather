<% @alerts.each do |alert| %>
  <div class="container">
    <div class="alert alert-<%=alert.category%>" role="alert">
      <strong><%=alert.title%></strong>
      <div><%=alert.summary%>&nbsp; 
      <a href="<%=alert.link%>" class="alert-link">details</a>
    </div>
    </div>
  </div>
<% end %>

<section class="chart">
  <div class="container">
    <div class="row">
      <div class="col-xs-12 portfolio-item text-center well well-lg">
        <h3>Temperature</h3>
        <div id="container-temp" class="chart-container">
          <div class="loader">Loading...</div>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="chart">
  <div class="container">
    <div class="row">
      <div class="col-xs-12 portfolio-item text-center well well-lg">
        <h3>Wind Speed &amp; Direction</h3>
        <div id="container-wind" class="chart-container">
          <div class="loader">Loading...</div>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="chart">
  <div class="container">
    <div class="row">
      <div class="col-xs-12 portfolio-item text-center well well-lg">
        <h3>Barometric Pressure</h3>
        <div id="container-pressure" class="chart-container">
          <div class="loader">Loading...</div>
        </div>
      </div>
    </div>
  </div>
</section>

<script type="text/javascript">

document.addEventListener("DOMContentLoaded", function(event) { 
  Highcharts.setOptions({
    global: {
      timezoneOffset: <%=Time.zone.utc_offset/ -60 %>
    }
  });
   $.getJSON('<%=url_for(action: 'temperature_readings', controller: 'home')%>', function (jsonData) {

      var yowData = new Array(), windSpeedData = new Array(), windDirectionData = new Array(), pressureReadings = new Array();
      var wboData = new Array(), wboWindSpeedData = new Array(), wboWindDirectionData = new Array(), wboPressureReadings = new Array();


     loadWeatherArray(jsonData.observed, yowData, pressureReadings, windSpeedData, windDirectionData);
     loadWeatherArray(jsonData.local, wboData, wboPressureReadings, wboWindSpeedData, wboWindDirectionData);

      function loadWeatherArray(json, tempReadings, pressureReadings, windSpeedData, windDirectionData) {
        var readings = Array();

        $.each(json, function (key, val) {

          var readingDate = Date.parse(key);
          var reading = val[0];

          var temperature = (null == reading) ? null : parseInt(reading.temperature);
          var speed = (null == reading) ? null : parseInt(reading.wind_speed);
          var directionName = (null == reading) ? null : reading.wind_direction;
          var direction = translateDirection(directionName);
          var pressure = (null == reading) ? null : parseFloat(reading.pressure);

          windSpeedData.push([readingDate, speed]);
          windDirectionData.push({
            x: readingDate,
            y: direction,
            name: directionName
          });
          pressureReadings.push([readingDate, pressure]);

          tempReadings.push([readingDate, temperature]);
        });


      }
    function translateDirection(textDir){
      
      if(null == textDir) return null;

      var map = jsonData.windDirections[textDir];
      if(null == map) return null;

      return map  
     
    }

    var hourlyForecast = new Array();
    var windSpeedForecast = new Array();
    $.each( jsonData.forecast, function( key, val ) {
      var forecastDate = Date.parse(key);
      var forecast = val[0];

      var temperature = (null == forecast) ? null : parseInt(forecast.temperature);
      var speed = (null == forecast) ? null : parseInt(forecast.wind_speed);

      hourlyForecast.push([forecastDate, temperature]);
      windSpeedForecast.push([forecastDate, speed]);

    });

    var defaultFontSize = '20px';

    var defaults = {
        title: {
          text: null
        },
        credits:{
          enabled:false
        },
        chart: {
            type: "line",
            animation: false
        },
        plotOptions: {
            line: {
                animation: false,
                lineWidth: 2
            },
            scatter: {
              animation: false
            }
        },
         xAxis: {
          minorTickWidth: 1,
          minorTickInterval: 1000*60*5,
          minorGridLineWidth: 1,
          minorTickLength:0,
          tickColor: '#DDD',
          gridLineWidth: 2,
          tickWidth: 2,
          tickInterval: 1000*60*60*4,
          type: 'datetime',
          labels: {
            step:0,
            formatter: function() {
                
                var hours = (new Date(this.value)).getHours();
                var dateFormat = '';
                switch(hours){
                  case 0:
                    dateFormat = '0%p';
                    break;
                  case 12:
                    dateFormat = '%a %lN';
                    break;
                  default:
                    dateFormat = '%l%p';
                }

                return Highcharts.dateFormat(dateFormat, this.value);
            },
            style: {
              fontSize: defaultFontSize
            }
          },
           plotLines: [{
                color: '#bbb',
                dashStyle: 'dash',
                width: 1,
                value: new Date()
            }] 
        },
       
        tooltip: {
            enabled: false
        },
        legend: {
            layout: 'horizontal',
            align: 'right',
            verticalAlign: 'bottom',
            borderWidth: 0,
            itemStyle: {
              fontSize: defaultFontSize
            },
            symbolWidth:20
        }

    }
    $('#container-temp').highcharts($.extend({}, defaults, {
        yAxis: [{ 
            tickInterval: 2,
            tickWidth: 2,
            gridLineWidth: 2,
            tickColor: '#DDD',
            minorTickWidth: 1,
            minorTickInterval: 1,
            minorGridLineWidth: 1,
            minorTickLength:0,
            title: {
                text: 'Â°C',
                style:{
                  fontSize: defaultFontSize,
                  textTransform: 'none'
                }
            },
            allowDecimals: false,
            labels:{
              style: {
                fontSize: defaultFontSize
              }}

          }, { 
           
            linkedTo: 0,
            opposite: true,
            title: {
                text: null
            },
            labels:{
            
              style: {
                fontSize: defaultFontSize
              }}
        }],
        series: [{
            name: 'Observed @ YOW',
            color:'#C00',
            data: yowData,
            type: 'scatter',
            marker: {
              radius: 4
            },
            states: {
              hover: {
                  enabled: false
              }
            }},
            {
            name: 'Observed @ Home',
            color:'#000',
            data: wboData,
            marker: {
              enabled: false
            },
            states: {
              hover: {
                enabled: false
              }
            }},
            {
            name: 'Forecast',
            dashStyle: 'Dot',
            color:'#C00',
            data: hourlyForecast,
            marker: {
              enabled: false
            },
            states: {
              hover: {
                  enabled: false
              }
            }
        }]

    }));


    $('#container-wind').highcharts($.extend({}, defaults, {

      
        yAxis: [{ 
          gridLineWidth: 2,
          minorGridLineWidth: 1,

          title: {
              text: 'km/h',
              style:{
                fontSize: defaultFontSize,
                textTransform: 'none'
              }
          },
          //allowDecimals: false,
          labels:{
            style: {
              fontSize: defaultFontSize
            }}
        },{ 
          id: 'wd',
          opposite:true,
          gridLineWidth: 0,
          minorGridLineWidth: 0,
          tickInterval: 22.5,
          title: null,
          allowDecimals: true,
          type:'category',
          labels: {
            step:0,
            formatter: function() {
              var value = parseFloat(this.value);
              
              var label = '';
              if(value == 0 || (value % 45 == 0)) {
                $.each(jsonData.windDirections, function(k, v) {
                    if (v == value) {
                      label = k;
                    }
                });
              }
              
              return label;
            },
            style: {
              fontSize: defaultFontSize

            }
          }
        }
        ],
        series: [{
            name: 'Observed',
            color:'#00C',
            data: windSpeedData,
            yAxis: 0,
            marker: {
              enabled: false
            }, 
            states: {
              hover: {
                enabled: false
              }
            }},
            {
            name: 'Forecast',
            dashStyle: 'ShortDash',
            color:'#00C',
            data: windSpeedForecast,
            yAxis: 0,
            marker: {
              enabled: false
            }, 
            states: {
              hover: {
                  enabled: false
              }
            }
        },
            {
            name: 'Direction',
            dashStyle: 'ShortDash',
            type: 'scatter',
            color:'#FC0',
            data: windDirectionData,
            yAxis: 'wd',
            marker: {
              radius: 4
            }, 
            states: {
              hover: {
                  enabled: false
              }
            }
        }

        ]

    }));

    $('#container-pressure').highcharts($.extend({}, defaults, {
        yAxis: [{ 
            gridLineWidth: 2,
            minorGridLineWidth: 1,
            title: {
                text: 'kPa',
                style:{
                  fontSize: defaultFontSize,
                  textTransform: 'none'
                }
            },
            allowDecimals: true,
            labels:{
              style: {
                fontSize: defaultFontSize
              }}

          }, { 
            minorGridLineWidth: 0,
            gridLineWidth:0,
            linkedTo: 0,
            opposite: true,
            title: {
                text: null
            },
            labels:{
            
              style: {
                fontSize: defaultFontSize
              }}
        }],
        series: [{
            name: 'Observed',
            color:'#0C0',
            data: pressureReadings,
            marker: {
              enabled: false
            }, 
            states: {
              hover: {
                  enabled: false
              }
            }}]

    }));

  });


});

</script>
